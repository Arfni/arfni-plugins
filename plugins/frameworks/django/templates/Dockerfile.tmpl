# Multi-stage Dockerfile for Django
# Generated by ARFNI Django Plugin v{{plugin_version}}
# Python Version: {{python_version}}

# ===== Build Stage =====
FROM python:{{python_version}}-slim AS build

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    postgresql-client \
    libpq-dev \
    python3-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# ===== Production Stage =====
FROM python:{{python_version}}-slim

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN useradd -m -u 1000 django && \
    mkdir -p /app/media /app/static /app/logs && \
    chown -R django:django /app

# Copy installed Python packages from build stage
COPY --from=build /usr/local/lib/python{{python_version}}/site-packages /usr/local/lib/python{{python_version}}/site-packages
COPY --from=build /usr/local/bin /usr/local/bin

# Copy application code
COPY --chown=django:django . .

# Switch to non-root user
USER django

# Collect static files (ignore errors for apps without static files)
RUN python manage.py collectstatic --noinput --clear || echo "No static files to collect"

# Expose application port
EXPOSE {{django_port | default: 8000}}

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period={{health_start_period | default: 40}}s --retries=3 \
    CMD curl -f http://localhost:{{django_port | default: 8000}}{{health_path | default: /health/}} || exit 1

# Run application with Gunicorn
CMD ["gunicorn", \
     "--bind", "0.0.0.0:{{django_port | default: 8000}}", \
     "--workers", "{{gunicorn_workers | default: 4}}", \
     "--threads", "{{gunicorn_threads | default: 2}}", \
     "--timeout", "{{gunicorn_timeout | default: 120}}", \
     "--access-logfile", "-", \
     "--error-logfile", "-", \
     "--log-level", "{{log_level | default: info}}", \
     "{{wsgi_application | default: myproject.wsgi:application}}"]
